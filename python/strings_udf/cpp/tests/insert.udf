// Copyright (c) 2022, NVIDIA CORPORATION.

#include <cudf/strings/udf/dstring.cuh>

#include "../tests/utilities.cuh"

__global__ void udf_kernel( cudf::string_view* d_in_strs, int size, cudf::strings::udf::dstring* d_out_strs, int count )
{
    int tid = (blockDim.x * blockIdx.x) + threadIdx.x;
    if( tid > 0 ) return;

    using dstring = cudf::strings::udf::dstring;

    auto const helloworld   = cudf::string_view{"helloworld", 10};
    auto const hello_world  = cudf::string_view{"hello world", 11};
    auto const hello_world2 = cudf::string_view{"hello, world", 12};

    dstring d_str{helloworld};

    d_str.insert(5, 1, ' ');
    verify(d_str, hello_world, "insert(char)");

    d_str = helloworld;
    d_str.insert(5, cudf::string_view{", ",2});
    verify(d_str, hello_world2, "insert(string_view)");

    d_str = helloworld;
    d_str.insert(5, ", ");
    verify(d_str, hello_world2, "insert(char*)");

    d_str = helloworld;
    d_str.insert(5, ", there", 2);
    verify(d_str, hello_world2, "insert(char*,size)");

    d_str = helloworld;
    d_str.insert(10, "!");
    verify(d_str, cudf::string_view{"helloworld!", 11}, "insert() end");

    d_out_strs[tid] = d_in_strs[tid];
}

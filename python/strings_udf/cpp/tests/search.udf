// Copyright (c) 2022, NVIDIA CORPORATION.

#include <cudf/strings/udf/search.cuh>

#include "../tests/utilities.cuh"

using namespace cudf::strings;

__global__ void udf_kernel( cudf::string_view* d_in_strs, int size, cudf::strings::udf::dstring* d_out_strs, int count )
{
  int tid = (blockDim.x * blockIdx.x) + threadIdx.x;
  if( tid > 0 ) return;

  auto const test_data = cudf::string_view{"Here is an orange and an apple", 30};
  auto const empty = cudf::string_view{};

  check_result(udf::count(test_data, "an")==4, "count(an)=4");
  check_result(udf::count(test_data, "a", 10, 40)==4, "count(a,10,40)=4");
  check_result(udf::count(test_data, "g", 1, 10)==0, "count(g,1,10)=0");
  check_result(udf::count(test_data, "g")==1, "count(g)=1");
  check_result(udf::count(test_data, "orange", 15, 25)==0, "count(orange,15,25)=0");
  check_result(udf::count(test_data, "an orange")==1, "count(an orange)=1");
  check_result(udf::count(test_data, "banana")==0, "count(banana)=0");

  check_result(udf::count(test_data, empty)==0, "count('')=0");
  check_result(udf::count(empty, empty)==0, "count('','')=0");
  check_result(udf::count(empty, "a")==0, "count('',a)=0");

  d_out_strs[tid] = d_in_strs[tid];
}

// Copyright (c) 2022, NVIDIA CORPORATION.

#include <cudf/strings/udf/dstring.cuh>

#include "../tests/utilities.cuh"

__global__ void udf_kernel( cudf::string_view* d_in_strs, int size, cudf::strings::udf::dstring* d_out_strs, int count )
{
    int tid = (blockDim.x * blockIdx.x) + threadIdx.x;
    if( tid > 0 ) return;

    using dstring = cudf::strings::udf::dstring;

    auto const test_data = cudf::string_view{"0123456789", 10};

    dstring d_str{test_data};

    d_str.reserve(5);
    verify(d_str, test_data, "reserve(5)");
    d_str.reserve(25);
    verify(d_str, test_data, "reserve(5)");

    d_str.shrink_to_fit();
    verify(d_str, test_data, "shrink_to_fit");

    d_str.resize(12);
    verify(d_str, cudf::string_view{"0123456789\0\0", 12}, "resize(12)");
    d_str.resize(4);
    verify(d_str, cudf::string_view{"0123", 4}, "resize(4)");

    d_str.clear();
    verify(d_str, cudf::string_view{nullptr, 0}, "clear()");

    d_out_strs[tid] = d_in_strs[tid];
}
